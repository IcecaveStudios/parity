C:37:"PHPUnit\Runner\DefaultTestResultCache":8310:{a:2:{s:7:"defects";a:0:{}s:5:"times";a:93:{s:60:"Icecave\Parity\AbstractExtendedComparableTest::testIsEqualTo";d:0.007;s:63:"Icecave\Parity\AbstractExtendedComparableTest::testIsNotEqualTo";d:0;s:61:"Icecave\Parity\AbstractExtendedComparableTest::testIsLessThan";d:0;s:64:"Icecave\Parity\AbstractExtendedComparableTest::testIsGreaterThan";d:0;s:70:"Icecave\Parity\AbstractExtendedComparableTest::testIsLessThanOrEqualTo";d:0;s:73:"Icecave\Parity\AbstractExtendedComparableTest::testIsGreaterThanOrEqualTo";d:0;s:56:"Icecave\Parity\Comparator\DeepComparatorTest::testInvoke";d:0.001;s:77:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithObjectReferences";d:0;s:72:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithEmptyArrays";d:0;s:67:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithArrays";d:0;s:78:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithAssociativeArrays";d:0;s:83:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithArraysThatDifferBySize";d:0;s:93:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithArraysThatDifferBySizeAndContent";d:0;s:83:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithArraysThatDifferByKeys";d:0;s:68:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithObjects";d:0;s:84:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithObjectsThatDifferBySize";d:0;s:94:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithObjectsThatDifferBySizeAndContent";d:0;s:87:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithObjectsThatDifferClassName";d:0;s:95:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithObjectsWithRelaxedClassComparisons";d:0;s:92:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithObjectsDifferentInnerClassTypes";d:0;s:84:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithObjectsParentAndDerived";d:0;s:91:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithObjectsHavingSharedInnerObject";d:0;s:76:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithSimpleRecursion";d:0;s:89:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithSimpleObjectsDoubleRecursion";d:0;s:106:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithSimpleObjectsBothHavingObject1AsFirstProperty";d:0;s:72:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithObjectCycle";d:0;s:98:"Icecave\Parity\Comparator\DeepComparatorTest::testCompareWithObjectsHavingInternalArraysAndObjects";d:0;s:66:"Icecave\Parity\Comparator\ObjectIdentityComparatorTest::testInvoke";d:0;s:67:"Icecave\Parity\Comparator\ObjectIdentityComparatorTest::testCompare";d:0;s:79:"Icecave\Parity\Comparator\ObjectIdentityComparatorTest::testCompareWithFallback";d:0;s:58:"Icecave\Parity\Comparator\ParityComparatorTest::testInvoke";d:0;s:68:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareInversion";d:0;s:71:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareWithFallback";d:0;s:76:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareWithAnyComparable";d:0;s:83:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareWithRestrictedComparable";d:0;s:104:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareWithRestrictedComparableAndUnsupportedOperand";d:0;s:77:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareWithSelfComparable";d:0;s:88:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareWithSelfComparableAndSubClass";d:0;s:89:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareWithSelfComparableAndNonObject";d:0;s:93:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareWithSelfComparableAndUnrelatedType";d:0;s:81:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareWithSubClassComparable";d:0;s:92:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareWithSubClassComparableAndSubClass";d:0;s:90:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareWithSubClassComparableUsesCache";d:0.001;s:93:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareWithSubClassComparableAndNonObject";d:0;s:97:"Icecave\Parity\Comparator\ParityComparatorTest::testCompareWithSubClassComparableAndUnrelatedType";d:0;s:56:"Icecave\Parity\Comparator\PhpComparatorTest::testCompare";d:0;s:55:"Icecave\Parity\Comparator\PhpComparatorTest::testInvoke";d:0;s:62:"Icecave\Parity\Comparator\StrictPhpComparatorTest::testCompare";d:0;s:94:"Icecave\Parity\Comparator\StrictPhpComparatorTest::testCompareWithoutRelaxedNumericComparisons";d:0;s:87:"Icecave\Parity\Comparator\StrictPhpComparatorTest::testCompareRelaxedNumericComparisons";d:0;s:73:"Icecave\Parity\Comparator\StrictPhpComparatorTest::testCompareWithObjects";d:0;s:61:"Icecave\Parity\Comparator\StrictPhpComparatorTest::testInvoke";d:0;s:66:"Icecave\Parity\Exception\NotComparableExceptionTest::testException";d:0.001;s:57:"Icecave\Parity\ExtendedComparableTraitTest::testIsEqualTo";d:0;s:60:"Icecave\Parity\ExtendedComparableTraitTest::testIsNotEqualTo";d:0;s:58:"Icecave\Parity\ExtendedComparableTraitTest::testIsLessThan";d:0;s:61:"Icecave\Parity\ExtendedComparableTraitTest::testIsGreaterThan";d:0;s:67:"Icecave\Parity\ExtendedComparableTraitTest::testIsLessThanOrEqualTo";d:0;s:70:"Icecave\Parity\ExtendedComparableTraitTest::testIsGreaterThanOrEqualTo";d:0;s:38:"Icecave\Parity\ParityTest::testCompare";d:0;s:40:"Icecave\Parity\ParityTest::testIsEqualTo";d:0;s:43:"Icecave\Parity\ParityTest::testIsNotEqualTo";d:0;s:41:"Icecave\Parity\ParityTest::testIsLessThan";d:0;s:44:"Icecave\Parity\ParityTest::testIsGreaterThan";d:0;s:50:"Icecave\Parity\ParityTest::testIsLessThanOrEqualTo";d:0;s:53:"Icecave\Parity\ParityTest::testIsGreaterThanOrEqualTo";d:0;s:34:"Icecave\Parity\ParityTest::testMin";d:0;s:34:"Icecave\Parity\ParityTest::testMax";d:0;s:87:"Icecave\Parity\ParityTest::testMinSequence with data set "Empty sequence, default null"";d:0;s:89:"Icecave\Parity\ParityTest::testMinSequence with data set "Empty sequence, default object"";d:0;s:88:"Icecave\Parity\ParityTest::testMinSequence with data set "Empty sequence, default value"";d:0;s:97:"Icecave\Parity\ParityTest::testMinSequence with data set "Object and null sequence, default null"";d:0;s:99:"Icecave\Parity\ParityTest::testMinSequence with data set "Object and null sequence, default object"";d:0;s:98:"Icecave\Parity\ParityTest::testMinSequence with data set "Object and null sequence, default value"";d:0;s:88:"Icecave\Parity\ParityTest::testMinSequence with data set "Number sequence, default null"";d:0;s:90:"Icecave\Parity\ParityTest::testMinSequence with data set "Number sequence, default object"";d:0;s:89:"Icecave\Parity\ParityTest::testMinSequence with data set "Number sequence, default value"";d:0;s:87:"Icecave\Parity\ParityTest::testMinSequence with data set "Mixed sequence, default null"";d:0;s:89:"Icecave\Parity\ParityTest::testMinSequence with data set "Mixed sequence, default object"";d:0;s:88:"Icecave\Parity\ParityTest::testMinSequence with data set "Mixed sequence, default value"";d:0;s:87:"Icecave\Parity\ParityTest::testMaxSequence with data set "Empty sequence, default null"";d:0;s:89:"Icecave\Parity\ParityTest::testMaxSequence with data set "Empty sequence, default object"";d:0;s:88:"Icecave\Parity\ParityTest::testMaxSequence with data set "Empty sequence, default value"";d:0;s:97:"Icecave\Parity\ParityTest::testMaxSequence with data set "Object and null sequence, default null"";d:0;s:99:"Icecave\Parity\ParityTest::testMaxSequence with data set "Object and null sequence, default object"";d:0;s:98:"Icecave\Parity\ParityTest::testMaxSequence with data set "Object and null sequence, default value"";d:0;s:88:"Icecave\Parity\ParityTest::testMaxSequence with data set "Number sequence, default null"";d:0;s:90:"Icecave\Parity\ParityTest::testMaxSequence with data set "Number sequence, default object"";d:0;s:89:"Icecave\Parity\ParityTest::testMaxSequence with data set "Number sequence, default value"";d:0;s:87:"Icecave\Parity\ParityTest::testMaxSequence with data set "Mixed sequence, default null"";d:0;s:89:"Icecave\Parity\ParityTest::testMaxSequence with data set "Mixed sequence, default object"";d:0;s:88:"Icecave\Parity\ParityTest::testMaxSequence with data set "Mixed sequence, default value"";d:0;s:41:"Icecave\Parity\ParityTest::testComparitor";d:0;}}}